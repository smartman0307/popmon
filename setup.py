from setuptools import setup, find_packages

NAME = 'popmon'


MAJOR = 0
REVISION = 3
PATCH = 1
DEV = False

# NOTE: also update version at: README.rst

with open('requirements.txt') as f:
    REQUIREMENTS = f.read().splitlines()

VERSION = '{major}.{revision}.{patch}'.format(major=MAJOR, revision=REVISION, patch=PATCH)
FULL_VERSION = VERSION
if DEV:
    FULL_VERSION += '.dev'
    with open('requirements-test.txt') as f:
        REQUIREMENTS += f.read().splitlines()


def write_version_py(filename: str = 'popmon/version.py') -> None:
    """Write package version to version.py.

    This will ensure that the version in version.py is in sync with us.

    :param filename: The version.py to write too.
    :type filename: str
    """
    # Do not modify the indentation of version_str!
    version_str = """\"\"\"THIS FILE IS AUTO-GENERATED BY SETUP.PY.\"\"\"

name = '{name!s}'
version = '{version!s}'
full_version = '{full_version!s}'
release = {is_release!s}
"""

    version_file = open(filename, 'w')
    try:
        version_file.write(version_str.format(name=NAME.lower(),
                                              version=VERSION,
                                              full_version=FULL_VERSION,
                                              is_release=not DEV))
    finally:
        version_file.close()


def setup_package() -> None:
    """The main setup method.

    It is responsible for setting up and installing the package.
    """
    write_version_py()

    setup(name=NAME,
          version=VERSION,
          python_requires='>=3.6',
          packages=find_packages(),
          install_requires=REQUIREMENTS,
          # files to be shipped with the installation, under: popmon/popmon/
          # after installation, these can be found with the functions in resources.py
          package_data=dict(popmon=['visualization/templates/*.html', 'visualization/templates/assets/css/*.css',
                                    'visualization/templates/assets/js/*.js', 'test_data/*.csv.gz',
                                    'test_data/*.json*', 'notebooks/popmon*tutorial*.ipynb']),
          entry_points={
              'console_scripts': [
                  'popmon_run = popmon.pipeline.amazing_pipeline:run',
              ],
          })


if __name__ == '__main__':
    setup_package()
